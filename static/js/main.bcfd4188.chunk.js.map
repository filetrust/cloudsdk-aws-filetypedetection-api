{"version":3,"sources":["components/swagger/api.yaml","img/logo.svg","components/shared/TopBar.js","components/swagger/SwaggerPage.js","index.js"],"names":["module","exports","TopBar","className","src","logo","alt","height","request","a","input","document","getElementById","value","_readInputFileBuffer","files","fileBuffer","fileBase64","_arrayBufferToBase64","fileName","name","body","file","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","result","onerror","error","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","SwaggerPage","useEffect","setTimeout","getElementsByClassName","addEventListener","event","button","querySelector","classList","contains","click","el","createElement","label","textContent","id","type","prepend","url","location","origin","yam","docExpansion","defaultModelExpandDepth","requestInterceptor","_loadBase64IntoRequestIfSpecified","ReactDOM","render","basename"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,iTCa5BC,EAVF,WACT,OACI,yBAAKC,UAAU,cAGX,yBAAKA,UAAU,QAAO,yBAAKC,IAAKC,IAAMC,IAAI,OAAOC,OAAO,U,4CCmCpE,WAAiDC,GAAjD,qBAAAC,EAAA,0DACUC,EAAQC,SAASC,eAAe,iBAEvBF,EAAMG,OAAyB,KAAhBH,EAAMG,MAHxC,yCAIeL,GAJf,uBAO6BM,EAAqBJ,EAAMK,MAAM,IAP9D,cAOUC,EAPV,OAQUC,EAAaC,EAAqBF,GAClCG,EAAWT,EAAMK,MAAM,GAAGK,KAEhCZ,EAAQa,KAAR,4BAAoCJ,EAApC,yBAA+DE,EAA/D,UAXJ,kBAYWX,GAZX,6C,+BAeeM,E,8EAAf,WAAoCQ,GAApC,SAAAb,EAAA,sEACiB,IAAIc,SAAQ,SAACC,EAASC,GAC/B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,kBAAkBN,GACzBI,EAAOG,OAAS,WACZL,EAAQE,EAAOI,SAEnBJ,EAAOK,QAAU,SAAAC,GACbP,EAAOO,OARnB,oF,sBAaA,SAASd,EAAqBe,GAI1B,IAHA,IAAIC,EAAS,GACTC,EAAQ,IAAIC,WAAWH,GACvBI,EAAMF,EAAMG,WACPC,EAAI,EAAGA,EAAIF,EAAKE,IACrBL,GAAUM,OAAOC,aAAaN,EAAMI,IAExC,OAAOG,OAAOC,KAAKT,GAGRU,MA3EG,WA2Bd,OA1BAC,qBAAU,WACNC,YAAW,WACPnC,SAASoC,uBAAuB,mBAAmB,GAAGC,iBAAiB,SAAS,SAAUC,GACtFH,YAAW,WACP,IAAII,EAASvC,SAASwC,cAAc,mBAErB,OAAXD,IACKA,EAAOE,UAAUC,SAAS,WAC3BH,EAAOI,QAGXR,YAAW,WACP,IAAMS,EAAK5C,SAASoC,uBAAuB,+BAA+B,GACtErC,EAAQC,SAAS6C,cAAc,SAC/BC,EAAQ9C,SAAS6C,cAAc,SACnCC,EAAMC,YAAc,2FACpBhD,EAAMiD,GAAK,cACXjD,EAAMkD,KAAO,OACbL,EAAGM,QAAQnD,EAAO+C,KACnB,QAER,UAER,OACJ,IAGC,oCACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAWK,IAAKpB,OAAOqB,SAASC,OAASC,IACrCC,aAAa,OACbC,wBAAwB,IACxBC,mBAAoB,SAAA5D,GAAO,O,2CAAI6D,CAAkC7D,Q,iBCjBjF8D,IAASC,OAAO,mBATL,WACT,OACA,kBAAC,IAAD,CAAQC,SAAS,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAO,kBAAC,EAAD,WAKG,MAAU7D,SAASC,eAAe,W","file":"static/js/main.bcfd4188.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/api.6ff7a5f2.yaml\";","module.exports = __webpack_public_path__ + \"static/media/logo.6c8e5727.svg\";","import React from \"react\";\nimport logo from \"../../img/logo.svg\";\n\nvar TopBar = () => {\n    return (\n        <div className=\"app-header\">\n            {/* <TopBarNavigation />\n            <div className=\"logo\" tabIndex=\"1\" ></div> */}\n            <div className=\"logo\"><img src={logo} alt=\"Logo\" height=\"90\" /></div>\n        </div>\n    );\n}\n\nexport default TopBar;","import React, { useEffect } from \"react\";\nimport yam from \"./api.yaml\";\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\nimport TopBar from \"../shared/TopBar.js\";\n\nvar SwaggerPage = () => {\n    useEffect(() => {\n        setTimeout(() => {\n            document.getElementsByClassName(\"opblock-summary\")[0].addEventListener(\"click\", function (event) {\n                setTimeout(() => {\n                    var button = document.querySelector(\".try-out button\");\n\n                    if (button !== null) {\n                        if (!button.classList.contains(\"cancel\")) {\n                            button.click();\n                        }\n\n                        setTimeout(() => {\n                            const el = document.getElementsByClassName(\"opblock-description-wrapper\")[1];\n                            let input = document.createElement(\"input\");\n                            let label = document.createElement(\"label\");\n                            label.textContent = \"Select a file to automatically convert to base64 and use or form the request body below.\";\n                            input.id = \"base64Input\"\n                            input.type = \"file\";\n                            el.prepend(input, label);\n                        }, 100);\n                    }\n                }, 300);\n            });\n        }, 500);\n    }, []);\n\n    return (\n        <>\n            <TopBar />\n            <SwaggerUI url={window.location.origin + yam}\n                docExpansion=\"list\"\n                defaultModelExpandDepth=\"1\"\n                requestInterceptor={request => _loadBase64IntoRequestIfSpecified(request)} />\n        </>);\n}\n\nasync function _loadBase64IntoRequestIfSpecified(request) {\n    const input = document.getElementById(\"base64Input\");\n\n    if (!input || !input.value || input.value === \"\") {\n        return request;\n    }\n\n    const fileBuffer = await _readInputFileBuffer(input.files[0])\n    const fileBase64 = _arrayBufferToBase64(fileBuffer);\n    const fileName = input.files[0].name;\n\n    request.body = `{\\r\\n\\t\"Base64\": \"${fileBase64}\",\"FileName\":\"${fileName}\"\\r\\n}`\n    return request;\n};\n\nasync function _readInputFileBuffer(file) {\n    return await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n        reader.onerror = error => {\n            reject(error);\n        }\n    });\n}\n\nfunction _arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n}\n\nexport default SwaggerPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport \"./App.css\";\nimport SwaggerPage from \"./components/swagger/SwaggerPage\";\n\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from \"react-router-dom\";\n\nvar Root = () => {\n  return (\n  <Router basename='/'>\n    <Switch>\n      <Route><SwaggerPage /></Route>\n    </Switch>\n  </Router>);\n}\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}